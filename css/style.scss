$LIGHTING_FLOOR: 1;
$LIGHTING_CEIL: 2;
$LIGHTING_FLAT: 3;

@mixin text3d($primary, $depth: 5, $shadowsteps: 5, $shadowincrementer: 3px, $shadowopacity: .5, $primaryshadowcolour: #000, $lighting: $LIGHTING_CEIL) {
  $predefinedShadows: (
    0 0 5px rgba($primaryshadowcolour, .05), 
    0 -1px 3px rgba($primaryshadowcolour, .2), 
    0 3px 5px rgba($primaryshadowcolour, .2));
  $value: ();
  @for $i from 1 through $depth {
    $num: $i + px;
    $hueadjust: $i;
    @if($lighting == $LIGHTING_FLOOR) {
      $hueadjust: ($i * 2 - $depth - 5) * 1%;
    } @elseif($lighting == $LIGHTING_CEIL) {
      $hueadjust: -($i*2 + $depth - 10) * 1%;
    } @elseif($lighting == $LIGHTING_FLAT) {
      $hueadjust: -$depth * 1%;
    }
    $colour: adjust-color($primary, $lightness: $hueadjust);
    $theShadow: 0 $num 0 $colour;
    $value: append($value, $theShadow, comma);
  }
  
  @for $i from 1 through $shadowsteps {
    @if($i >= length($predefinedShadows)) {
      $dist: $i * $shadowincrementer;
      $value: append($value, 0 $dist $dist rgba($primaryshadowcolour, $shadowopacity));
    } @else {
      $value: append($value, nth($predefinedShadows, $i));
    }
  }
  
  text-shadow: $value;
}

@font-face {
  font-family: "Press Start 2P";
  src: url(font.otf)
}

html, body {
  padding: 0;
  margin: 0;
  overflow: hidden;
  background-color: #E7B251;
  background-color: #FFFFFF;
  // font-family: 'Press Start 2P', cursive;
  height: 100%;
}

#three-canvas { display: none; width: 100%!important; height: 100%!important; }

.game-started {
  #chrome-no-internet {
    display: none;
  }

  #three-canvas {
    display: block;
  }

  &::after {
  //   content: ' ';
  //   position: fixed;
  //   top: 0;
  //   right: 0;
  //   width: 75%;
  //   height: 25%;
  //   opacity: 1;
  //   /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#ffffff+50,ffffff+50,e2ae4f+100&0+55,1+100 */
  //   background: -moz-linear-gradient(15deg,  rgba(255,255,255,0) 50%, rgba(252,247,237,0) 55%, rgba(226,174,79,1) 100%); /* FF3.6-15 */
  //   background: -webkit-linear-gradient(15deg,  rgba(255,255,255,0) 50%,rgba(252,247,237,0) 55%,rgba(226,174,79,1) 100%); /* Chrome10-25,Safari5.1-6 */
  //   background: linear-gradient(15deg,  rgba(255,255,255,0) 50%,rgba(252,247,237,0) 55%,rgba(226,174,79,1) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
  //   filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#00ffffff', endColorstr='#e2ae4f',GradientType=1 ); /* IE6-9 fallback on horizontal gradient */
  }
}

/**
 * Preloader.
 */
#preloader {
  position: fixed;
  left:0;top:0;
  width:100%;height:100%;
  z-index:999;

  background: rgb(82,90,95);
  background: -moz-radial-gradient(circle, rgba(82,90,95,1) 0%, rgba(0,1,1,1) 100%);
  background: -webkit-radial-gradient(circle, rgba(82,90,95,1) 0%, rgba(0,1,1,1) 100%);
  background: radial-gradient(circle, rgba(82,90,95,1) 0%, rgba(0,1,1,1) 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr="#525a5f",endColorstr="#000101",GradientType=1);

  &.hidden {
    display: none;
  }

  &:before {
    content: ' ';
    position: fixed;
    left:0;top:0;
    width:100%;height:100%;

    background-image: url(../media/preloader-dino.png);
    background-repeat: no-repeat;
    background-position: center center;
    background-size: 505px;
  }

  &:after {
    content: ' ';
    position: fixed;
    left:0;top:0;
    width:100%;height:100%;

    background-image: url(../media/3d-title.png);
    background-repeat: no-repeat;
    background-position: center 75%;
    background-size: 1300px;
  }

  .progress {
    width: 1300px;
    position: fixed;
    left:0;right:0;
    bottom: 5%;
    margin: auto;
    transform: scale(.7);
  }
}

// 1366x768
@media (max-width: 1365px) {
  #preloader {
    &:before {}
    &:after {
      background-size: 1100px;
    }
    .progress {
      width: 1100px;
    }
  }
}

@media (max-width: 1200px) {
  #preloader {
    &:before {}
    &:after {
      background-size: 1000px;
    }
    .progress {
      width: 1000px;
    }
  }
}

@media (max-width: 992px) {
  #preloader {
    &:before {}
    &:after {
      background-size: 750px;
    }
    .progress {
      width: 750px;
    }
  }
}

@media (max-width: 768px) {
  #preloader {
    &:before {background-size: 70%;}
    &:after {display: none;}
    .progress {
      width: 90%;
    }
  }
}

/*
*
*
START // CHART'S RULES
 -> "if you're picking code, don't forget the variables :)"
*/

$yellow: #f1c40f;
$lime: #76c900;
$navy: #0a4069;
$cyan: #57caf4;
$red: #ec008c;
$white: #fefefe;
$gray: #444;
$lightGray: lighten($gray, 30);

$transitionDuration: .3s;
$transition: all $transitionDuration ease-in-out;

.chart
{
    font-size: 1em;

    perspective: 1000px;
    perspective-origin: 50% 50%;
    backface-visibility: visible;
}

$faceColor: rgba($white, .3);
$growColor: rgba($red, .6);

.bar
{
    font-size: 1em;

    position: relative;

    height: 10em;

    transition: $transition;
    transform: rotateX(60deg) rotateY(0deg);

    transform-style: preserve-3d;

    .face
    {
        font-size: 2em;

        position: relative;

        width: 100%;
        height: 2em;

        background-color: $faceColor;

        &.side-a,
        &.side-b
        {
            width: 2em;
        }
    }
    .side-a
    {
        transform: rotateX(90deg) rotateY(-90deg) translateX(2em) translateY(1em) translateZ(1em);
    }
    .side-b
    {
        transform: rotateX(90deg) rotateY(-90deg) translateX(4em) translateY(1em) translateZ(-1em);
        position: absolute;
        right: 0;
    }
    .side-0
    {
        transform: rotateX(90deg) rotateY(0) translateX(0) translateY(1em) translateZ(-1em);
    }
    .side-1
    {
        transform: rotateX(90deg) rotateY(0) translateX(0) translateY(1em) translateZ(3em);
    }
    .top
    {
        transform: rotateX(0deg) rotateY(0) translateX(0em) translateY(4em) translateZ(2em);
    }
    .floor
    {
        box-shadow: 0 .1em 0.6em rgba(0,0,0,.3), .6em -0.5em 3em rgba(0,0,0,.3), 1em -1em 8em $white;
    }
}

.growing-bar
{
    transition: $transition;
    background-color: $growColor;
    width: 100%;
    height: 2em;
}

@mixin drawSkin($color, $name)
{
    .bar.#{$name}
    {
        .side-a,
        // &.bar-100 .side-b,
        .growing-bar
        {
            background-color: rgba($color, .6);
        }
        .side-0 .growing-bar
        {
            box-shadow: -0.5em -1.5em 4em $color;
        }
        .floor .growing-bar
        {
            box-shadow: 0em 0em 2em $color;
        }
    }
}

@mixin drawFaces($color, $name)
{
    .chart .bar.#{$name} .face
    {
        background-color: rgba($color, .2);
    }
}

@include drawSkin(rgba($yellow, .8), 'yellow');
@include drawSkin(rgba($red, .8), 'red');
@include drawSkin($cyan, 'cyan');
@include drawSkin(rgba($navy, .8), 'navy');
@include drawSkin($lime, 'lime');
@include drawSkin($white, 'white');
@include drawSkin($gray, 'gray');

@include drawFaces(rgba($yellow, .6), 'yellow-face');
@include drawFaces($lime, 'lime-face');
@include drawFaces(rgba($red, .6), 'red-face');
@include drawFaces(rgba($navy, .6), 'navy-face');
@include drawFaces($cyan, 'cyan-face');
@include drawFaces($gray, 'gray-face');
@include drawFaces($lightGray, 'lightGray-face');

@for $i from 0 to 101
{
    .bar-#{$i}
    {
        .growing-bar
        {
            width: percentage($i/100);
        }
    }
}

/*
END // CHART'S RULES
*
*
*/

/**
 * Chrome no internet starting joke.
 */
#chrome-no-internet {
  width: 600px;
  height: 275px;
  position: fixed;
  left:0;right:0;
  margin:auto;
  margin-top: 175px;
  font-family: 'Segoe UI', Tahoma, sans-serif;

  & > .poster {
    display: block;
    width: 100%;
    height: 75px;

    background-image: url(../media/no-internet.png);
    background-repeat: no-repeat;
    background-size: contain;

    position: absolute;
  }

  @keyframes jump {
    from {top: 0px;}
    to {top: -50px;}
  }

  &.before-start > .poster {
    animation: jump .3s;
    animation-iteration-count: 2;
    animation-direction: alternate;
    animation-timing-function: ease-in-out;
  }

  & > h1 {
    font-size: 24px;
    font-weight: 500;
    color: rgb(32, 33, 36);
    line-height: 30px;
    margin-bottom: 20px;
    margin-top: 75px;
  }

  & > .info {
    & > p {
      color: rgb(95, 99, 104);
      font-size: 15px;
      line-height: 23.25px;
      margin-bottom: 0;
    }

    & > ul {
      color: rgb(95, 99, 104);
      font-size: 15px;
      list-style-type: disc;
      margin-top: 0;
      line-height: 23.25px;

      li > {
        color: rgb(95, 99, 104);
        display: list-item;
      }

      #game-start {
        color: #7FD133;
        font-weight: 500;
        cursor: pointer;

        &.hidden {
          display: none;
        }
      }
    }

    & > small {
      color: rgb(95, 99, 104);
      font-size: 12px;
      line-height: 18.6px;
    }
  }
}

/**
 * Interface stuff.
 */
#game-restart {
  width: 600px;
  height: 275px;
  position: fixed;
  left:0;top:0;right:0;bottom:0;
  margin:auto;
  font-family: 'Press Start 2P', cursive;
  text-align: center;
  cursor: pointer;
  -webkit-touch-callout: none; /* iOS Safari */
    -webkit-user-select: none; /* Safari */
     -khtml-user-select: none; /* Konqueror HTML */
       -moz-user-select: none; /* Old versions of Firefox */
        -ms-user-select: none; /* Internet Explorer/Edge */
            user-select: none; /* Non-prefixed version, currently
                                  supported by Chrome, Opera and Firefox */

  & > h1 {
    font-size: 40px;
    margin-bottom: 75px;
  }

  & > img {
    width: 128px;
    image-rendering: pixelated;
    -ms-interpolation-mode: nearest-neighbor;
  }

  &.hidden {
    display: none;
  }
}


/**
 * Scores.
 */

$scorecountercolor: darken(#85A0AC, 5%);

#score-counter {
  position: fixed;
  top: 5%;
  right: 5%;
  z-index: 100;

  @include text3d(
    adjust-color($scorecountercolor, $lightness: -8%), 
    $depth: 8, 
    $primaryshadowcolour: adjust-color($scorecountercolor, $lightness: -10%, $saturation: +20%));

  & > .score-counter-score {
    margin-left: 30px;

    &.score-flash {
      animation: blinker .5s step-start infinite;
    }
  }
}

#webcam{
  position: absolute;
  top: 0;
  left: 0;
  z-index: 100;
  background: blue;
  height: 150px;
}

#canvas{
  position: absolute;
  top: 0;
  left: 0;
  z-index: 101;
}